<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAG
        CAAAAk1TRnQBSQFMAwEBAAEwAQABMAEAAR4BAAEeAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABeAMA
        AR4DAAEBAQABIAUAAUABODYAAwYBCAMxAU8DTQGVA1YByQM+AesDBgH8AwYB/AM+AesDVgHKA00BlgMx
        AU8DBgEI/wCpAAMNAREDSAGEAzkB7AMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMA
        Af8DOQHsA0gBhAMNARH/AJ0AAzcBWwM+AesDAAH/AwAB/wMAAf8DUgHWA04BmANAAXADOAFcAzgBXANA
        AXADTgGYA1IB1gMAAf8DAAH/AwAB/wM+AesDNwFb/wCRAAMEAQUDUAGaAwAB/wMAAf8DEgH6A1ABmgMf
        AS0gAAMfASwDUAGaAxIB+gMAAf8DAAH/A1ABmgMEAQX/AIUAAwQBBQNTAa8DAAH/AwAB/wNWAckDHQEq
        MAADHQEqA1cByAMAAf8DAAH/A1MBrwMEAQX/AIEAA04BmQMAAf8DAAH/A1ABnwMEAQY4AAMEAQYDUAGf
        AwAB/wMAAf8DUAGa/wB9AAM3AVsDAAH/AwAB/wNQAZ8DAAEBQwABAQNQAZ8DAAH/AwAB/wM3AVv/AHUA
        Aw0BEQM+AesDAAH/A1YByQMEAQZIAAMEAQYDVgHJAwAB/wM+AesDDQER/wBxAANIAYUDAAH/AxIB+gMd
        ASpQAAMdASoDEgH6AwAB/wNIAYT/AG0AAwYBCAM5AewDAAH/A1ABmiQAAwQBBgNVAbEDVQGxAwQBBiQA
        A1ABmgMAAf8DOQHsAwYBCP8AaQADMQFPAwAB/wMAAf8DHwEsJAADHgErAwAB/wMAAf8DHgErJAADHwEs
        AwAB/wMAAf8DMQFP/wBpAANNAZYDAAH/A1IB1igAAx8BLAMAAf8DAAH/Ax8BLCgAA1IB1gMAAf8DTQGV
        /wBpAANWAckDAAH/A04BmCgAAx8BLAMAAf8DAAH/Ax8BLCgAA04BmAMAAf8DVgHJ/wBpAAM+AesDAAH/
        Az8BbxgAAwQBBgMeASsDHwEsAx8BLAMyAVADAAH/AwAB/wMyAVADHwEsAx8BLAMeASsDBAEGGAADQAFw
        AwAB/wM+Aev/AGkAAwYB/AMAAf8DOAFcGAADVQGxAwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMA
        Af8DAAH/AwAB/wNVAbEYAAM4AVwDAAH/AwYB/P8AaQADUQHVAxIB+gMiATIYAANVAbEDAAH/AwAB/wMA
        Af8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/A1UBsRgAAzgBXAMAAf8DBgH8/wBpAAMIAQsDEgEZ
        HAADBAEGAx4BKwMfASwDHwEsAzIBUAMAAf8DAAH/AzIBUAMfASwDHwEsAx4BKwMEAQYYAANAAXADAAH/
        Az4B6/8AnQADHwEsAwAB/wMAAf8DHwEsKAADTgGYAwAB/wNWAcn/AGkAAwMBBANIAYQDPQFqKAADHwEs
        AwAB/wMAAf8DHwEsKAADUgHWAwAB/wNNAZb/AGkAAyYBOQMAAf8DAAH+Ax4BKyQAAx4BKwMAAf8DAAH/
        Ax4BKyQAAx8BLAMAAf8DAAH/AzEBT/8AaQADBwEJAzkB7AMAAf8DTAGRJAADBAEGA1UBsQNVAbEDBAEG
        JAADUAGaAwAB/wM5AewDBgEI/wBtAANHAYMDAAH/A0wBkVQAAx0BKgMSAfoDAAH/A0gBhf8AcQADAQEC
        AyABLwMDAQRQAAMEAQYDVgHJAwAB/wM+AesDDQES/wB5AAMrAUMDOQHsA0wBkQMAAQFDAAEBA1ABnwMA
        Af8DAAH/AzcBW/8AfQADQQFyAwAB/wMAAf8DTAGRPAADBAEGA1ABnwMAAf8DAAH/A1ABmv8AgQADBAEG
        A1MBsAMAAf8DOQHsOAADHQEqA1cByAMAAf8DAAH/A1MBrwMEAQX/AIUAAwQBBgNBAXIDKwFDAwMBBANM
        AZEDTAGRAx4BKyAAAx8BLANQAZoDEgH6AwAB/wMAAf8DUAGaAwQBBf8AlQADIAEvAwAB/wMAAf8DAAH+
        Az0BaggAAyIBMgM4AVwDQAFwA04BmANSAdYDAAH/AwAB/wMAAf8DPgHrAzcBW/8AnQADAQECA0cBgwM5
        AewDAAH/A0gBhAQAAxIBGQMMAfsDAAH/AwAB/wMAAf8DAAH/AwAB/wM4Ae0DSAGFAw0BEf8AqQADBgEI
        AyYBOQMDAQQEAAMIAQsDUQHVAwYB/AM+AesDVgHJA00BlgMxAU8DBgEI/wCNAAFCAU0BPgcAAT4DAAEo
        AwABeAMAAR4DAAEBAQABAQUAAeABARYAA/8BAAH/AYABBwH8DAAB/gEAAQEB/AwAAfwCAAH8DAAB8AEf
        AeABPAwAAeABfwH4ARwMAAHgAf8B/AEcDAABwQH/Af4BDAwAAYMC/wEEDAABhwL/AYQMAAEPAfgBfwHA
        DAABDwH4AX8BwAwAAR8B+AF/AeAMAAEfAfgBfwHgDAABHwGAAQcB4AwAAR8BgAEHAeAMAAEfAYABBwHg
        DAABPwGAAQcB4AwAAf8B+AF/AeAMAAEfAfgBfwHgDAABDwH4AX8BwAwAAQ8B+AF/AcAMAAGPAv8BhAwA
        AY8C/wEEDAAB4QH/Af4BDAwAAeEB/wH8ARwMAAHhAf8B+AEcDAAB8AEfAeABPAwAAf4BDAEAAfwMAAH+
        AQgBAQH8DAAB/wGIAQcB/AwACw==
</value>
  </data>
</root>